class GenerationConfig(
    @Summary
    var name: string,
    var pageCreatePrompt: string,
    var pageUpdatePrompt: string,
    var pageFixPrompt: string,
    var kiwiCreatePrompt: string,
    var kiwiUpdatePrompt: string,
    var kiwiFixPrompt: string,
    var createAnalyzePrompt: string,
    var updateAnalyzePrompt: string,
    var pageTemplateRepo: string,
    var kiwiTemplateRepo: string
) {

    static val nameIdx = Index<string, GenerationConfig>(false, g -> g.name)

    deleted var templateRepo: string?

    fn __pageTemplateRepo__() -> string {
        return ""
    }

    fn __kiwiCreatePrompt__() -> string {
        return ""
    }

    fn __kiwiUpdatePrompt__() -> string {
        return ""
    }

    fn __kiwiFixPrompt__() -> string {
        return ""
    }

    fn __kiwiTemplateRepo__() -> string {
        return "git@github.com:wizardleeen/kiwi-template.git"
    }

    fn __createAnalyzePrompt__() -> string {
        return ""
    }

    fn __updateAnalyzePrompt__() -> string {
        return ""
    }

}

@Bean
class GenerationConfigService {

    var preset: GenerationConfig?

    fn getPreset() -> GenerationConfig {
        if (preset != null)
            return preset!!
        else
            throw Exception("No preset generation config found")
    }

    fn setPreset(config: GenerationConfig) {
        preset = config
    }

    fn copy(config: GenerationConfig) -> GenerationConfig {
        return GenerationConfig(
            config.name + "Copy",
            config.pageCreatePrompt,
            config.pageUpdatePrompt,
            config.pageFixPrompt,
            config.kiwiCreatePrompt,
            config.kiwiUpdatePrompt,
            config.kiwiFixPrompt,
            config.createAnalyzePrompt,
            config.updateAnalyzePrompt,
            config.pageTemplateRepo,
            config.kiwiTemplateRepo
        )
    }

}
